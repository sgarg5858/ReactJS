Now we have added alert Reducer and actions to Redux now its time to do it for functions like Registration 

For  that we will first create Action Types 
export const REGISTER_SUCCESS= 'REGISTER_SUCCESS';
export const REGISTER_FAIL= 'REGISTER_FAIL';`

Then we have to Define AuthReducer for changing the state in an immutable way

import{REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';

const initialState={
    token:localStorage.getItem('token'),
    isAuthenticated:null,
    loading:true,
    user:null
};

export default function(state=initialState,action){

    const{type,payload}=action;
    switch(type)
    {
        case REGISTER_SUCCESS:
            localStorage.setItem('token',payload.token);
            return{
                ...state,
                ...payload,
                isAuthenticated:true,
                loading:false
            };

        case REGISTER_FAIL:
            localStorage.removeItem('token');
            return{
                ...state,
                token:null,
                isAuthenticated:false,
                loading:false
            };
        
        default:
            return state;

    }
}
*********************************************************************************************************************
Now we have to define Actions so that we can dispatch actions to AuthReducer...

import axios from 'axios';
import {REGISTER_FAIL,REGISTER_SUCCESS} from './types';
import {setAlert} from './alert';
//Register User

export const register = ({name,email,password}) => async dispatch =>{
    const config={
        headers:{
            'Content-Type': 'application/json'
        }
    };
    const body = JSON.stringify({name,email,password});

    try{
        const res= await axios.post('http://localhost:5000/api/users',body,config);

        dispatch({
            type:REGISTER_SUCCESS,
            payload:res.data
        });
    }catch(error)
    {
        console.log(error.response.data.errors);
        const errors=error.response.data.errors;
        if(errors)
        {
            errors.forEach(error => dispatch(setAlert(error.msg,'danger')));
        }
        dispatch({
            type:REGISTER_FAIL
        })
    }
}

*********************************************************************************************************
Now Time to Dispatch Register Action from Component and we have to recieve register functions from actionvia connect from react-redux


export default connect(null,{setAlert,register})(Register);

 const onSubmit =(event)=>{
        //as bydefault this is submit...
        event.preventDefault();
        if(password !==password2)
        {
            console.log("Passwords do not match..");
            props.setAlert('Passwords do not match','danger');
        }
        else{
            props.register({name,email,password});
        }
    }
