First Way To Render Conditional Content using single curly brackets {}
 state = {
    persons: [
      { name: 'Sanjay', age: 22 },
      { name: 'Prim', age: 23 },
      { name: 'Sanyam', age: 23 }
    ],
    otherState: 'some other value',
    showPersons : false
  };
  
  togglePersonsHandler = () => {
    const doesShow = this.state.showPersons;
    this.setState({
      showPersons : !doesShow
    })
  };
  
   <Button style={{marginBottom:"2px"}}
         variant="outline-dark" onClick={this.togglePersonsHandler}>
           {this.state.showPersons === true ? 'Hide Persons' : 'Show Persons' }</Button>
           
        {
        this.state.showPersons === true ?
          <div>
          <Person
            name={this.state.persons[0].name}
            age={this.state.persons[0].age}
            click={this.switchNameHandler.bind(this,'Sanjay Garg')}
          />
          <Person
            name={this.state.persons[1].name}
            age={this.state.persons[1].age}
            changed={this.nameChangedHandler}
          >
          </Person>
          <Person
            name={this.state.persons[2].name}
            age={this.state.persons[2].age}
          />
        </div> : null
        }
        
 **********************************************************************
(Preffered) Alternate Way:  For nested conditions In above method it might not be easy to keep track
 
 When there is any change in state then render() is called so using it
 
 render() {

    let persons =null;

    if(this.state.showPersons)
    {
      persons=(
        <div>
        <Person
          name={this.state.persons[0].name}
          age={this.state.persons[0].age}
          click={this.switchNameHandler.bind(this,'Sanjay Garg')}
        />
        <Person
          name={this.state.persons[1].name}
          age={this.state.persons[1].age}
          changed={this.nameChangedHandler}
        >
        </Person>
        <Person
          name={this.state.persons[2].name}
          age={this.state.persons[2].age}
        />
      </div> 
      )
    }

    return (
      <div className="App">
        <h1>Hi, I'm a React App</h1>
        <p>This is really working!</p>
        <Button style={{marginBottom:"2px"}}
         variant="outline-dark" onClick={this.togglePersonsHandler}>
           {this.state.showPersons === true ? 'Hide Persons' : 'Show Persons' }</Button>
           {persons}
      </div>
      
     );
****************************************************************************************************************************
Outputting Lists:

Using Vanilla Javascript we are outputting a list by mapping an array into an array with jsx elements

 if(this.state.showPersons)
    {
      persons=(
        <div>
          {this.state.persons.map( (person) => {
            return <Person name={person.name} age={person.age}></Person>
          })}
       
      </div> 
      )
    }
****************************************************************************************************************************** 

 if(this.state.showPersons)
    {
      persons=(
        <div>
          {this.state.persons.map( (person,index) => {
            return <Person 
            click={() => this.deletePersonHandler(index)} 
            name={person.name} 
            age={person.age} ></Person>
          })}
      </div> 
      )
    }


  deletePersonHandler = (index) => {
    // const persons =this.state.persons.slice();
    //should always update in an immutable fashion
    const persons=[...this.state.persons];
    persons.splice(index,1);
    this.setState({
      persons:persons
    })
  };
  
  *****************************************************************************************************************************
  
  
